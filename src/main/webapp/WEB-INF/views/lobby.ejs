<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Website kiểm tra trắc nghiệm nhanh</title>
  <link rel="icon" href="https://freepngimg.com/thumb/symbol/88546-area-text-symbol-icons-question-mark-computer.png"
    type="image/gif" sizes="16x16">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous" />

  <link rel="stylesheet" href="ranking.css">
  <link rel="stylesheet" href="quiz-form.css">
  <link rel="stylesheet" href="lobby.css">
  <link rel="stylesheet" href="start.css">
</head>

<body>
  <div class="container__lobby">
    <div class="head__id">
      <h2 id="clientRoom"></h2>
    </div>
    <div class="head__rank">
      <div id="clientRank" class="rank"></div>
      <img id="clientIconRank" src="bronze.png" alt="">
      <h2 id="clientName"></h2>
      <h3>Total Score : <span id="clientScore">default</span></h3>
    </div>

    <a class="btn" id="showRoomModal" href="#open-modal">Join / Create</a>
    <button type="button" id="quitRoom" onclick="quitRoom()" style="display: none;">Quit Room</button>
    <div id="open-modal" class="modal-window">

      <div class="button-box">
        <div id="btn"></div>
        <button type="button" class="toggle-btn" onclick="join()">Join</button>
        <button type="button" class="toggle-btn" onclick="create()">Create</button>
      </div>
      <form id="create">
        <a href="#" title="Close" class="modal-close">Close</a>
        <!-- <h2>Create Room</h2> -->
        <div class="input">
          <div class="inputBox">
          </div>
          <div class="inputBox">
            <button type="button" class="submit" onclick="handleCreateRoom()">Create</button>
          </div>
        </div>
      </form>

      <form id="join">
        <a href="#" title="Close" class="modal-close">Close</a>
        <!-- <h2>Join Room</h2> -->
        <div class="input">
          <div class="inputBox">
            <input type="text" id="clientJoinId" placeholder="Please input ur ID Room" />
          </div>
          <div class="inputBox">
            <button type="button" class="submit" onclick="handleJoinRoom()">Join</button>
          </div>
        </div>
      </form>
    </div>

    <div class="lobby__body" id="lobby__body"></div>

    <button type="button" id="showPageOption" style="display: none;" onclick="intoStart()">Let's go</button>
    <button type="button" onclick="logout()">Logout</button>
  </div>

  <div class="animate__animated animate__zoomIn container__start" style="display: none;">
    <div class="quiz">
      <form id="optionExam" class="quiz-form" accept-charset="utf-8">
        <div class="quiz-form__quiz1">
          <p class="quiz-form__question">Topic</p>
          <label class="quiz-form__ans1">
            <input type="radio" name="topic" id="IT" value="IT" checked />
            <span class="design1"></span>
            <span class="text1">Công nghệ</span>
          </label>
          <label class="quiz-form__ans1">
            <input type="radio" name="topic" id="history" value="history" />
            <span class="design1"></span>
            <span class="text1">Sử</span>
          </label>
          <label class="quiz-form__ans1">
            <input type="radio" name="topic" id="geographic" value="geography" />
            <span class="design1"></span>
            <span class="text1">Địa</span>
          </label>
        </div>

        <div class="quiz-form__quiz1">
          <p class="quiz-form__question">Difficult</p>
          <label class="quiz-form__ans1">
            <input type="radio" name="difficult" id="easy" value="1" checked />
            <span class="design1"></span>
            <span class="text1">Easy</span>
          </label>
          <label class="quiz-form__ans1">
            <input type="radio" name="difficult" id="medium" value="2" />
            <span class="design1"></span>
            <span class="text1">Medium</span>
          </label>
          <label class="quiz-form__ans1">
            <input type="radio" name="difficult" id="expert" value="3" />
            <span class="design1"></span>
            <span class="text1">Expert</span>
          </label>
        </div>
      </form>
    </div>
    <button type="button" onclick="showPageLobby()">
      <<<<<< </button>
        <input class="submit animate__animated animate__zoomIn" id="start-button" type="submit" value="Start"
          onclick="startExam();" />

  </div>

  <div class="animate__animated animate__zoomIn container__quiz" style="display: none;">
    <div class="clock ">
      <span id="time-left">0</span>
    </div>
    <div class="heading">
      <h1 class="heading__text">Quiz</h1>
    </div>
    <div class="quiz">
      <form class="quiz-form" id="formExam">

        <!-- -->
        <div class="quiz-form__quiz">
          <p class="quiz-form__question" id="quizQuestion">
            6s to ready...
          </p>
          <label class="quiz-form__ans" for="answer_A">
            <input type="radio" name="quizAnswerValue" id="answer_A" value="0" checked />
            <span class="design"></span>
            <span class="text quizAnswer"></span>
          </label>
          <label class="quiz-form__ans" for="answer_B">
            <input type="radio" name="quizAnswerValue" id="answer_B" value="1" />
            <span class="design"></span>
            <span class="text quizAnswer"></span>
          </label>
          <label class="quiz-form__ans" for="answer_C">
            <input type="radio" name="quizAnswerValue" id="answer_C" value="2" />
            <span class="design"></span>
            <span class="text quizAnswer"></span>
          </label>
          <label class="quiz-form__ans" for="answer_D">
            <input type="radio" name="quizAnswerValue" id="answer_D" value="3" />
            <span class="design"></span>
            <span class="text quizAnswer"></span>
          </label>
        </div>
      </form>
    </div>
  </div>

  <div class="animate__animated animate__zoomIn container__rank " style="display: none;">
    <div class="title__box">
      <h2 class="title">Congratulation</h2>
    </div>
    <div class="ranking__box">
      <div class="rank">
        <img src="silver-medal.png" alt="" />
        <h2 id="top2PlayerName"></h2>
        <div class="score">
          <h2 id="top2PlayerScore"></h2>
          <h3 id="top2PlayerRight"></h3>
        </div>
      </div>
      <div class="rank">
        <img src="gold-medal.png" alt="" />
        <h2 id="top1PlayerName"></h2>
        <div class="score">
          <h2 id="top1PlayerScore"></h2>
          <h3 id="top1PlayerRight"></h3>
        </div>
      </div>
      <div class="rank">
        <img src="bronze-medal.png" alt="" />
        <h2 id="top3PlayerName"></h2>
        <div class="score">
          <h2 id="top3PlayerScore"></h2>
          <h3 id="top3PlayerRight"></h3>
        </div>

      </div>
    </div>
  </div>

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    // nghi
    var x = document.getElementById("join");
    var y = document.getElementById("create");
    var z = document.getElementById("btn");

    function create() {
      x.style.left = "-50%";
      y.style.left = "50%";
      z.style.left = "82px";
    }

    function join() {
      x.style.left = "50%";
      y.style.left = "-50%";
      z.style.left = "0px";
    }

    // transform div 
    function intoStart() {
      var x = document.querySelector(".container__start");
      var y = document.querySelector(".container__lobby")
      if (x.style.display === "none") {
        x.style.display = "block";
        y.style.display = "none"
      }
    };

    //hoang
    if (!document.cookie || document.cookie < 0) window.location.href = "http://localhost:8080/website-trac-nghiem/"
    const socket = io();
    socket.emit("fetch-info", document.cookie)
    socket.on("fetch-info-success", ({ userInfor }) => {
      $("#clientName").text(userInfor.name)
      $("#clientRank").text(userInfor.level)
      $("#clientScore").text(userInfor.total_score)

      //save
      var d = new Date();
      d.setTime(d.getTime() + (7 * 24 * 60 * 60 * 1000));
      var expires = "expires=" + d.toUTCString();
      // document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      document.cookie = `id=${userInfor.id};${expires};path=/`
      document.cookie = `name=${userInfor.name};${expires};path=/`
      document.cookie = `total_score=${userInfor.total_score};${expires};path=/`
      document.cookie = `level=${userInfor.level};${expires};path=/`

      console.log(document.cookie);
    })

    const handleCreateRoom = () => {
      socket.emit("create-room", (document.cookie))
      socket.on("create-room-success", ({ roomId }) => {
        document.getElementById("clientJoinId").value = roomId
      })
    }

    const handleJoinRoom = () => {
      var roomId = document.getElementById("clientJoinId").value
      if (!roomId && roomId === "") return alert("Not valid Input")

      const userCookie = getDataFromCookie()

      let data = { id: userCookie.id, username: userCookie.username, name: userCookie.name, roomId }
      console.log(data);

      socket.emit("join-room", data)
    }

    socket.on("join-room-success", ({ listMember, roomId, creatorId }) => {
      $("#clientRoom").text(roomId)
      resetOldListMember(listMember)
      showNewListMember(listMember)

      const userCookie = getDataFromCookie()
      document.getElementById("quitRoom").style.display = "block"
      document.getElementById("showRoomModal").style.display = "none"

      if (userCookie.id == creatorId) {
        // alert("Bạn là chủ phòng");
        document.getElementById("showPageOption").style.display = "block"
      }
    })

    socket.on("join-room-failed", () => {
      alert("This room is blocked")
    })

    socket.on("someone-leave-room", (listMember) => {
      resetOldListMember(listMember)
      showNewListMember(listMember)
    })

    const getDataFromCookie = () => {
      let array = []
      let userCookie = {}

      array = document.cookie.split("; ")
      array.forEach((item) => {
        item = item.split("=")
        userCookie[item[0]] = item[1]
      })
      console.log("cookie", userCookie);

      return userCookie
    }

    const resetOldListMember = (listMember) => {
      const divListMember = document.getElementById("lobby__body");
      while (divListMember.lastElementChild) {
        divListMember.removeChild(divListMember.lastElementChild);
      }
    }

    const showNewListMember = (listMember) => {
      listMember.forEach((item) => {
        var html = document.createElement("div");
        html.classList.add("user")
        var text = document.createTextNode(item.name);
        html.appendChild(text);
        document.getElementById("lobby__body").appendChild(html);
      })
    }

    const logout = () => {
      document.cookie = "id=; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";
      document.cookie = "username=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
      document.cookie = "name=; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";
      document.cookie = "level=; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";
      document.cookie = "total_score=; expires=Thu, 18 Dec 2013 12:00:00 UTC; path=/";

      console.log(document.cookie);
      window.location.href = "http://localhost:8080/website-trac-nghiem"
    }

    const showPageLobby = () => {
      var a = document.querySelector(".container__lobby");
      var b = document.querySelector(".container__start")
      a.style.display = "block";
      b.style.display = "none";
    }

    // transform div & active clock 
    const timeLeftDisplay = document.querySelector("#time-left");
    let timeLeft = 0;
    function startExam() {// nghi ft.hoang
      const roomId = document.getElementById("clientRoom").innerText;
      const optionExam = $("#optionExam").serialize()
      console.log("option :");
      alert("option")
      socket.emit("all-member-start", ({ roomId, optionExam }))
    };

    const showPageExam = () => {
      var a = document.querySelector(".container__quiz");
      var b = document.querySelector(".container__start")
      var c = document.querySelector(".container__lobby")
      if (a.style.display === "none") {
        a.style.display = "block";
        b.style.display = "none";
        c.style.display = "none";
      }
    }

    socket.on("all-member-start-success", ({ listQuestion, listAnswer, arrayQuestionId }) => {
      console.log(listQuestion, listAnswer, arrayQuestionId);

      showPageExam()

      var quizAnswer = document.getElementsByClassName("quizAnswer");

      let currentScore = 0
      let indexQuestion = 0
      let timeLeft = 0
      let myInterval
      myInterval = setInterval(() => {
        function setQuestion() {
          var indexQuestion = timeLeft / 6 - 1

          if (!listQuestion[indexQuestion] || indexQuestion === 10) return false
          $("#quizQuestion").text(`Question ${indexQuestion + 1}: ${listQuestion[indexQuestion].content}`)
          console.log("setQuestion câu hỏi trong list" + indexQuestion);

          return true
        };

        function setAnswer() {
          var indexQuestion = timeLeft / 6 - 1
          var indexAnswerA = 4 * indexQuestion
          var indexAnswerB = 4 * indexQuestion + 1
          var indexAnswerC = 4 * indexQuestion + 2
          var indexAnswerD = 4 * indexQuestion + 3

          console.log("setQuestion câu trả lời trong list: " + indexAnswerA, indexAnswerB, indexAnswerC, indexAnswerD);

          quizAnswer[0].innerHTML = listAnswer[indexAnswerA].content;
          quizAnswer[1].innerHTML = listAnswer[indexAnswerB].content;
          quizAnswer[2].innerHTML = listAnswer[indexAnswerC].content;
          quizAnswer[3].innerHTML = listAnswer[indexAnswerD].content;

        };

        function submitAnswer() {
          const yourChoice = $("#formExam").serialize()
          const indexChoice = yourChoice.charAt(yourChoice.length - 1)
          var timeShowQuiz = (timeLeft - 5)
          var indexQuestion = timeShowQuiz / 6 - 1
          var indexAnswerA = 4 * indexQuestion
          var indexAnswerInList = parseInt(indexAnswerA) + parseInt(indexChoice)
          // console.log(yourChoice);
          // console.log(indexChoice);

          // console.log("cau trl tuong ung:", parseInt(indexAnswerA) + parseInt(indexChoice));
          const answerInfor = listAnswer[indexAnswerInList];
          console.log(answerInfor);

          if (answerInfor.status) currentScore += 10
          console.log("diem hien tai la : " + currentScore);
        };

        function showPageRank() {
          document.querySelector('.container__quiz').style.display = "none";
          document.querySelector('.container__lobby').style.display = "none";
          document.querySelector('.container__start').style.display = "none";
          document.querySelector('.container__rank').style.display = "block";
        }

        function saveMember() {
          const userCookie = getDataFromCookie()
          console.log("send id và score", { usernameCookie: userCookie.username, currentScore, roomId: $("#clientRoom").text() });
          socket.emit("save-member", { userCookieId: userCookie.id, currentScore, roomId: $("#clientRoom").text() })
        }

        function updateRank() {
          const userCookie = getDataFromCookie()
          socket.emit("update-rank", { userCookie, currentScore })
        }

        //
        timeLeft++
        timeLeftDisplay.innerHTML = timeLeft;
        console.log(timeLeft);

        if (timeLeft == 1) console.log("6s to already....");
        if (timeLeft !== 0 && timeLeft % 6 == 0) {
          const ok = setQuestion();
          if (!ok) {
            console.log("bạn đã thi xong, vui lòng đợi kết quả...");
            showPageRank()
            saveMember()
            updateRank()
            return clearInterval(myInterval)
          }
          setAnswer();
        }

        if (timeLeft > 6 && timeLeft % 6 === 5) {
          submitAnswer()
        }

        if (timeLeft == 66) return

      }, 1000)
    })

    socket.on("save-member-success", () => {
      setTimeout(() => {
        socket.emit("show-rank", { roomId: $("#clientRoom").text() })
      }, 2000)
    })

    socket.on("show-rank-success", ({ listRank }) => {
      // alert("listRank")
      console.log("listRank", listRank);

      $("#top1PlayerName").text(listRank[0].name)
      $("#top1PlayerScore").text(listRank[0].score)
      $("#top1PlayerRight").text(`${listRank[0].score / 10} out of 10`)

      if (listRank[1]) {
        $("#top2PlayerName").text(listRank[1].name)
        $("#top2PlayerScore").text(listRank[1].score)
        $("#top2PlayerRight").text(`${listRank[1].score / 10} out of 10`)
      }
      if (listRank[2]) {
        $("#top3PlayerName").text(listRank[2].name)
        $("#top3PlayerScore").text(listRank[2].score)
        $("#top3PlayerRight").text(`${listRank[2].score / 10} out of 10`)
      }

    })

    const quitRoom = () => {
      window.location.reload()
    }
  </script>

</body>

</html>